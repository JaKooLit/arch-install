#!/bin/sh

echo "arch-installer."
echo "Install arch linux in a few Q and A. Warning. Only ext4 file system (for now)"
pacman -Sy
timedatectl set-ntp true
clear
lsblk
echo "Enter the drive to create partitions for linux systems ( eg: /dev/sda). "
echo "root, home, swap, boot/efi partitions need to be created. home and swap partitions are optional but recommended: "
read drive

# you can use cfdisk or gdisk in place of fdisk as well.
fdisk $drive
clear
lsblk
echo "Enter the root partition (eg: /dev/sda1): "
read rootpartition
mkfs.ext4 $rootpartition
mount $rootpartition /mnt
clear
lsblk
read -p "Did you also create separate home partition? [y/n]: " answerhome
if [[ $answerhome = y ]] ; then
  echo "Enter home partition (eg: /dev/sda2): "
  read homepartition
  mkfs.ext4 $homepartition
  mkdir /mnt/home
  mount $homepartition /mnt/home
fi
clear
lsblk
read -p "Did you also create swap partition? [y/n]: " answerswap
if [[ $answerswap = y ]] ; then
  echo "Enter swap partition (eg: /dev/sda3): "
  read swappartition
  mkswap $swappartition
  swapon $swappartition
fi
clear
lsblk
echo "Enter EFI partition (eg: /dev/sda4): "
read efipartition
mkfs.vfat $efipartition
mkdir -p /mnt/boot
mount $efipartition /mnt/boot
clear
lsblk
sleep 2s
#Replace kernel header file and with your requirements (eg linux-zen linux-zen-headers)
#replace intel-ucode with amd-ucode if you use amd processor
pacstrap /mnt base base-devel linux-lts linux-lts-headers amd-ucode
genfstab -U /mnt >> /mnt/etc/fstab

#Replace Asia/Seoul with your timezone
clear
ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
clear
echo "Enter your host name: "
read hostname
echo $hostname > /etc/hostname
echo "127.0.0.1       localhost" >> /etc/hosts
echo "::1             localhost" >> /etc/hosts
echo "127.0.1.1       $hostname.localdomain    $hostname" >> /etc/hosts
clear
#if you are dualbooting, add os-prober with grub and efibootmgr
pacman -Sy --needed grub efibootmgr
echo "Installing grub bootloader in /boot/efi parttiton"
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=UEFI-Arch
grub-mkconfig -o /boot/grub/grub.cfg

pacman -S networkmanager network-manager-applet dialog wpa_supplicant mtools dosfstools  avahi xdg-user-dirs xdg-utils gvfs gvfs-smb nfs-utils inetutils dnsutils alsa-utils

# additional packages. Edit or add as required

pacman -S --noconfirm easyeffects pipewire pipewire-alsa pipewire-pulse pipewire-jack bash-completion openssh rsync reflector acpi acpi_call  bridge-utils dnsmasq vde2 openbsd-netcat iptables-nft ipset firewalld sof-firmware nss-mdns acpid os-prober ntfs-3g terminus-font linux-headers linux-zen linux-zen-headers

# pacman -S --noconfirm bluez bluez-utils cups

#additional packages for qemu / kvm 

# pacman -S --noconfirm qemu qemu-arch-extra edk2-ovmf

# uncomment as necessary for AMD for Nvidia GPU driver

pacman -S xf86-video-amdgpu 
# pacman -S nvidia nvidia-utils nvidia-settings


systemctl enable NetworkManager
systemctl enable bluetooth
systemctl enable cups.service
systemctl enable sshd
systemctl enable avahi-daemon
#systemctl enable tlp #uncomment command out if you install tlp
systemctl enable reflector.timer
systemctl enable fstrim.timer
# systemctl enable libvirtd
systemctl enable firewalld
systemctl enable acpid
#systemctl enable qemu-guest-agent #uncomment if installed qemu-guest-agent


clear
echo "Enter password for root user:"
passwd
clear
echo "Enter username to add a user: "
read username
useradd -m -g users -G wheel -s /bin/bash $username
echo "Enter password for the user you created just now:"
passwd $username
clear
echo "NOTE: ALWAYS REMEMBER THIS USERNAME AND PASSWORD YOU PUT JUST NOW."
sleep 3s
#Adding sudo previliages to the user you created
echo "$username ALL=(ALL) ALL" >> /etc/sudoers.d/$username
clear
#Adding qemu / kvm users
# usermod -aG libvirt $username
exit

clear
umount -a

echo "Pre-Installation Finished. Rebooting in 10 seconds press CTRL-C to cancel"
echo "You can install gui and other utilities after rebooting."
echo "You can check https://github.com/JaKooLit/arch-install.git for DE installation"
sleep 10s
reboot
